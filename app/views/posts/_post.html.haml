.post{:id => "post_#{post.id}", :class => cycle("odd", "even")}
  %table
    %tr
      %td.user_info{ :valign => "top"}
        = link_to(h(post.user), post.user)
        %br
        - if post.user.has_avatar?
          = image_tag post.user.avatar(:thumbnail, :class => "user_avatar")
        - elsif !post.user.email.blank?
          = image_tag("http://www.gravatar.com/avatar.php?gravatar_id=" + Digest::MD5.hexdigest(post.user.email) + "&s=64", :class => "user_avatar")
        = post.user.rank
        %br
        == #{post.user.posts.count} #{t(:posts)}
        %br
        == #{t(:Since)} #{post.user.created_at.strftime(date_display)}
        %br
        == #{post.user.online? ? t(:Online) : t(:Offline)}
      %td.actions
        - if !post.topic.locked? || (post.topic.locked? && current_user.can?(:edit_locked_topics, @forum))
          - if current_user.can?(:reply, @forum)
            = link_to t(:Reply), new_topic_post_path(post.topic)
            \/
            = link_to t(:Quote), reply_topic_post_path(post.topic, post)
          - if (post.belongs_to?(current_user) && current_user.can?(:edit_own_posts, @forum)) || current_user.can?(:edit_posts, @forum)
            \/
            = link_to t(:Edit), edit_topic_post_path(post.topic, post)
          - if (post.belongs_to?(current_user) && current_user.can?(:delete_own_posts, @forum)) || current_user.can?(:delete_posts, @forum)
            \/
            = link_to t(:Delete), topic_post_path(post.topic, post), :method => "delete", :confirm => t(:confirm_deletion, :thing => "post")
          - if current_user.can?(:split_topics, @forum)
            \/
            = link_to t(:Split), split_moderator_topic_post_path(post.topic, post)
        - else
          = t(:topic_locked_or_unlocked, :status => "locked")
    %tr
      %td{:valign => "top"}
        .details
          %a{:href => forum_topic_path(post.topic.forum, post.topic) + "/#{(params[:page] || 1)}" + "#post_#{post.id}", :name => "post_#{post.id}"}
            \#
            = post.number
          \-
          = time_ago_in_words(post.created_at) + " " + t(:ago)
          - unless post.edits.empty?
            \-
            = link_to pluralize(post.edits.size, "edit"), post_edits_path(post)
        .content
          = parse_text(post.text)
          - if post.user.can?(:use_signature, @forum) && !post.user.signature.blank?
            .signature
              %br
              ______________
              %br
              = parse_text(post.user.signature)
          - edits = current_user.can?(:see_hidden_edits, @forum) ? post.edits : post.edits.visible
          - unless edits.empty?
            .edit-note
              == #{t(:This_post_was_edited_by)} #{post.editor.login} #{time_ago_in_words(post.updated_at)} #{t(:ago)}
